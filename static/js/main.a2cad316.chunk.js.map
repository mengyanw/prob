{"version":3,"sources":["components/CoverImage.js","components/ProgressBar.js","components/MusicPlayerController.js","components/MusicInfo.js","music-config.js","components/MusicPlayer.js","App.js","index.js"],"names":["CoverImage","coverSrc","className","src","alt","ProgressBar","React","forwardRef","ref","min","max","musicPlayed","setMusicPlayed","setIsSeeking","value","onChange","time","parseFloat","onAfterChange","current","seekTo","tipFormatter","minute","parseInt","second","minute_str","second_str","MusicPlayerController","isPlaying","setIsPlaying","onPrevTrackHandler","onNextTrackHandler","shape","size","onClick","icon","StepBackwardOutlined","prev","PauseOutlined","CaretRightOutlined","StepForwardOutlined","MusicInfo","musicName","artist","defaultPlayList","musicSrc","MusicPlayer","useState","isSeeking","musicDuration","setMusicDuration","playList","playListIndex","setPlayListIndex","useRef","length","url","playing","loop","volume","played","width","height","onProgress","process","playedSeconds","onDuration","duration","onEnded","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2cad316.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CoverImage.css\"\n\nconst CoverImage = ({coverSrc}) => {\n    return (\n        <img className=\"cover-image\" src={coverSrc} alt=\"cover\"/>\n    )\n}\n\nexport default CoverImage;","import React from 'react';\nimport { Slider } from 'antd'\n\nconst ProgressBar = React.forwardRef(({ min, max, musicPlayed, setMusicPlayed, setIsSeeking}, ref) => {\n    const onChangeHandler = (time) => {\n        setIsSeeking(true); \n        setMusicPlayed(parseFloat(time))\n    }\n    const onAfterChangeHandler = (time) => {\n        setIsSeeking(false);\n        ref.current.seekTo(parseFloat(time));\n    }\n    const tipFormatter = (time) => {\n        let minute = parseInt(time / 60);\n        let second = time - 60 * parseInt(time / 60);\n        let minute_str = minute < 10 ? `0${minute}` : `${minute}` \n        let second_str = second < 10 ? `0${second}` : `${second}` \n        return `${minute_str}: ${second_str}` \n    }\n    return (\n        <Slider \n        value={musicPlayed} \n        min={min}\n        max={max}\n        onChange={onChangeHandler}\n        onAfterChange={onAfterChangeHandler} \n        tipFormatter={tipFormatter}\n        />\n    )\n});\n\nexport default ProgressBar;","import React from \"react\";\nimport { Row, Column, Button } from 'antd';\nimport { PauseOutlined, CaretRightOutlined, StepBackwardOutlined, StepForwardOutlined} from '@ant-design/icons';\n\nconst MusicPlayerController = ({ isPlaying, setIsPlaying, onPrevTrackHandler, onNextTrackHandler}) => {\n  const pauseHandler = () => {\n    setIsPlaying((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Button shape='circle' size='large' onClick={onPrevTrackHandler} icon={<StepBackwardOutlined />}></Button>{' '} \n       \n      <Button shape='circle' size='large' onClick={pauseHandler} icon={isPlaying ? <PauseOutlined /> : <CaretRightOutlined />}></Button>{' '}\n      <Button shape='circle' size='large' onClick={onNextTrackHandler} icon={<StepForwardOutlined />}></Button>\n    </>\n  );\n};\n\nexport default MusicPlayerController;\n","import React from \"react\";\nimport \"./MusicInfo.css\"\n\nconst MusicInfo = ({ musicName, artist }) => {\n  return (\n    <div>\n      <p className=\"music-name\">{musicName}</p>\n      <p className=\"artist\">{artist}</p>\n    </div>\n  );\n};\n\nexport default MusicInfo;\n","// These royalty-free music pieces are downloaded from https://www.chosic.com/free-music/all/. \n\nconst defaultPlayList = [\n    {\n      musicName: \"Autumn\",\n      artist: \"Keys of Moon\",\n      musicSrc: \"music/Autumn.mp3\",\n      coverSrc: \"music/1.jpeg\",\n    },\n    {\n      musicName: \"Piano Roll\",\n      artist: \"James Scott\",\n      musicSrc: \"music/James_Scott_Frog_Legs_Rag_1906_piano_roll.mp3\",\n      coverSrc: \"music/2.jpeg\",\n    },\n    {\n      musicName: \"Little Wooden Church\",\n      artist: \"Anonymous\",\n      musicSrc: \"music/Little_Wooden_Church.mp3\",\n      coverSrc: \"music/3.jpeg\",\n    },\n    {\n      musicName: \"Spring Flowers\",\n      artist: \"Keys of Moon\",\n      musicSrc: \"music/Spring-Flowers.mp3\",\n      coverSrc: \"music/4.jpeg\",\n    },\n    {\n      musicName: \"Spring Song\",\n      artist: \"Victor Herbert Orchestra\",\n      musicSrc: \"music/Victor_Herbert_Orchestra_1909_-_Spring_Song.mp3\",\n      coverSrc: \"music/5.jpeg\",\n    },\n    {\n      musicName: \"Venetian Love\",\n      artist: \"Victor Herbert Orchestra\",\n      musicSrc: \"music/Victor_Herbert_Orchestra_1909_Venetian_Love_Song.mp3\",\n      coverSrc: \"music/6.jpeg\",\n    }\n  ];\n\nexport default defaultPlayList;","import React from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useState, useRef } from \"react\";\nimport CoverImage from \"./CoverImage\";\nimport ProgressBar from \"./ProgressBar\";\nimport MusicPlayerController from \"./MusicPlayerController\";\nimport MusicInfo from \"./MusicInfo\";\nimport defaultPlayList from \"../music-config\";\nimport \"./MusicPlayer.css\";\n\nconst MusicPlayer = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  const [musicPlayed, setMusicPlayed] = useState(0);\n  const [musicDuration, setMusicDuration] = useState(0);\n  const [playList, setPlayList] = useState(defaultPlayList);\n  const [playListIndex, setPlayListIndex] = useState(0);\n  const ref = useRef(null);\n\n  const onProgressHandler = (process) => {\n    if (isSeeking === false) {\n      setMusicPlayed(process.playedSeconds);\n    }\n  };\n\n  const onPrevTrackHandler = () => {\n    if (playListIndex == 0) {\n      setPlayListIndex(playList.length - 1);\n    } else {\n      setPlayListIndex(playListIndex - 1);\n    }\n  };\n\n  const onNextTrackHandler = () => {\n    if (playListIndex == playList.length - 1) {\n      setPlayListIndex(0);\n    } else {\n      setPlayListIndex(playListIndex + 1);\n    }\n  };\n\n  return (\n    <div className=\"music-player\">\n      <CoverImage \n      coverSrc={playList[playListIndex].coverSrc}\n       />\n      <MusicInfo\n        musicName={playList[playListIndex].musicName}\n        artist={playList[playListIndex].artist}\n      />\n      <ReactPlayer\n        ref={ref}\n        url={playList[playListIndex].musicSrc}\n        playing={isPlaying}\n        loop={false} // to add state\n        volume={0.5}\n        played={musicPlayed}\n        width=\"100%\"\n        height=\"100%\"\n        onProgress={onProgressHandler}\n        onDuration={(duration) => setMusicDuration(duration)}\n        onEnded={onNextTrackHandler}\n      />\n      <ProgressBar\n        ref={ref}\n        min={0}\n        max={musicDuration}\n        musicPlayed={musicPlayed}\n        setMusicPlayed={setMusicPlayed}\n        setIsSeeking={setIsSeeking}\n      />\n      <MusicPlayerController\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        onPrevTrackHandler={onPrevTrackHandler}\n        onNextTrackHandler={onNextTrackHandler}\n      />\n    </div>\n  );\n};\n\nexport default MusicPlayer;\n","import React from \"react\";\nimport \"./App.less\";\nimport MusicPlayer from \"./components/MusicPlayer\";\n\nfunction App() {\n  \n  return (\n    <>\n      <header>PROB</header>\n      <main className=\"music-player-container\">\n        <MusicPlayer />\n      </main>\n      <footer>\n        <p>&copy; Designed & Coded by Mengyan Wu</p>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}